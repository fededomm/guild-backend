definitions:
  models.Personaggio:
    properties:
      class:
        type: string
      name:
        type: string
      rank:
        type: string
      tier_set_pieces:
        type: integer
    required:
    - class
    - name
    - rank
    - tier_set_pieces
    type: object
  models.User:
    properties:
      battle_tag:
        type: string
      name:
        type: string
      pg:
        $ref: '#/definitions/models.Personaggio'
      surname:
        type: string
      username:
        type: string
    required:
    - battle_tag
    - name
    - pg
    - surname
    - username
    type: object
  response.BadRequestError:
    properties:
      code:
        example: 400
        type: integer
      message:
        type: string
    type: object
  response.Created:
    properties:
      body:
        $ref: '#/definitions/models.User'
      code:
        example: 201
        type: integer
      message:
        type: string
    type: object
  response.InternalServerError:
    properties:
      code:
        example: 500
        type: integer
      message:
        type: string
    type: object
  response.NotFoundError:
    properties:
      code:
        example: 404
        type: integer
      message:
        type: string
    type: object
info:
  contact: {}
paths:
  /getall:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.BadRequestError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.NotFoundError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.InternalServerError'
      summary: Get all users
  /insert:
    post:
      consumes:
      - application/json
      parameters:
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/response.Created'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.BadRequestError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.NotFoundError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.InternalServerError'
      summary: Insert one user
swagger: "2.0"
